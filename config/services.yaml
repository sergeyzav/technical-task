# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  exceptions:
    Symfony\Component\HttpKernel\Exception\NotFoundHttpException: { code: 404 }
    App\Exception\BookCategoryNotFoundException: { code: 404, hidden: false }
    App\Exception\SubscriberAlreadyExistsException: { code: 409, hidden: false }
    App\Exception\UserAlreadyExistsException: { code: 409, hidden: false }
    App\Exception\BookAlreadyExistsException: { code: 409, hidden: false }
    App\Exception\RequestBodyConvertException: { code: 400, hidden: false }
    App\Exception\BookNotFoundException: { code: 404, hidden: false }
    App\Exception\UserNotFoundException: { code: 404, hidden: false }
    App\Exception\BookFormatNotFoundException: { code: 404, hidden: false }
    App\Exception\UploadFileInvalidTypeException: { code: 404, hidden: false }
    App\Exception\BookCategoryNotEmptyException: { code: 400, hidden: false }
    App\Exception\BookCategoryAlreadyExistsException: { code: 409, hidden: false }

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    bind:
      bool $isDebug: '%kernel.debug%'

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'

  App\Service\ProductProvider\CsvProductProvider:
    arguments:
      $fileName: '../pasta.csv'

  App\Service\ProductListing\ProductSearchService:
    arguments:
      $filters: [ '@App\Service\ProductListing\Criteria\ManufacturerCriteria', '@App\Service\ProductListing\Criteria\PriceCriteria', '@App\Service\ProductListing\Criteria\PropertiesCriteria', '@App\Service\ProductListing\Criteria\RegionCriteria' ]

  App\Service\ProductListing\ProductFilterService:
    arguments:
      $filterBuilders: [ '@App\Service\ProductListing\CriteriaBuilder\ManufacturerCriteriaBuilder', '@App\Service\ProductListing\CriteriaBuilder\PriceRangeCriteriaBuilder', '@App\Service\ProductListing\CriteriaBuilder\PropertiesCriteriaBuilder', '@App\Service\ProductListing\CriteriaBuilder\RegionCriteriaBuilder' ]

  App\Service\ExceptionHandler\ExceptionMappingResolver:
    arguments: [ '%exceptions%' ]

  App\Listener\ApiExceptionListener:
    tags:
      - { name: kernel.event_listener, event: kernel.exception, priority: 10 }

  App\Listener\ValidationExceptionListener:
    tags:
      - { name: kernel.event_listener, event: kernel.exception, priority: 15 }

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
